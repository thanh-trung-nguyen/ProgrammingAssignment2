dataAPI <- GET(paste(URL,"&",apiKey,sep=""))
library(httr)
library(jsonlite)
dataAPI <- GET(paste(URL,"&",apiKey,sep=""))
URL <- "http://api.trulia.com/webservices.php?library=LocationInfo&function=getNeighborhoodsInCity&city=Chicago&state=IL"
apiKey <- "ryr7ngde5p2tyzy95y87nfje"
dataAPI <- GET(paste(URL,"&",apiKey,sep=""))
data<- content(dataAPI)
data<- content(dataAPI,as = "text")
str(dataAPI)
data<- content(dataAPI,as = "text",type = "xml")
library(readr)
library("readr")
install.packages("readr")
dataAPI <- GET(paste(URL,"&",apiKey,sep=""))
Neighborhood <- content(dataAPI,as = "text")
?content
r <- POST("http://httpbin.org/post", body = list(a = 1, b = 2))
r
content(r) # automatically parses JSON
r2 <- content(r) # automatically parses JSON
r2 <- content(r,"text") # automatically parses JSON
r2
r2 <- cat(content(r,"text"),"\n") # automatically parses JSON
r2
content(r, "raw") # raw bytes from server
r <- POST("http://httpbin.org/post", body = list(a = 1, b = 2))
content(r, "raw") # raw bytes from server
dataAPI <- GET(paste(URL,"&",apiKey,sep=""))
str(dataAPI)
rm(list=ls())
library(httr)
library(jsonlite)
library(xml2)
library(readr)
URL <- "http://api.trulia.com/webservices.php?library=LocationInfo&function=getNeighborhoodsInCity&city=Chicago&state=IL"
apiKey <- "ryr7ngde5p2tyzy95y87nfje"
dataAPI <- GET(paste(URL,"&",apiKey,sep=""))
Neighborhood <- content(dataAPI,as = "text")
dataAPI
URL <- "http://api.trulia.com/webservices.php?library=LocationInfo&function=getNeighborhoodsInCity&city=Chicago&state=IL"
apiKey <- "apikey=ryr7ngde5p2tyzy95y87nfje"
dataAPI <- GET(paste(URL,"&",apiKey,sep=""))
dataAPI
Neighborhood <- content(dataAPI,as = "text")
Neighborhood <- cat(content(dataAPI,as = "text"),"\n")
Neighborhood <- content(dataAPI,as = "text")
Neighborhood
idx1 = gregexpr("<neighborhood><id>",Neighborhood)
idx1[`]
idx1[1]
idx1
as.numeric(idx1)
as.numeric(idx1[1])
as.numeric(idx1[[1])
as.numeric(idx1[[1]])
idx1 <- as.numeric(idx1[[1]])
idx2 <- gregexpr("</id><name>",Neighborhood)
idx2 <- as.numeric(idx2[[1]])
substr(Neighborhood,idx1[1],idx2[1])
idx3 <- gregexpr("</name></neighborhood",Neighborhood)
idx3<-as.numeric(idx3[[1]])
substr(Neighborhood,idx1[1],idx3[1])
numNeigh = length(idx1)
NeighID = rep(0,numNeigh)
NeighName = rep("",numNeigh)
substr(Neighborhood,idx1[1]+19,idx3[1])
substr(Neighborhood,idx1[1]+18,idx3[1])
n=1
substr(Neighborhood,start=idx1[n]+18,stop = idx2[n]-1)
substr(Neighborhood,start = idx2[n]+11, stop= idx3[n]-1)
for (n in 1:numNeigh)
{
NeighID[n] <- as.numeric(substr(Neighborhood,start=idx1[n]+18,stop = idx2[n]-1))
NeighName[n] <- substr(Neighborhood,start = idx2[n]+11, stop= idx3[n]-1)
}
library(data.table)
install.packages("data.table")
library(data.table)
NeighData <- data.table(NeighID,NeighName)
NeighData
rm(list=ls())
URL <- "http://api.trulia.com/webservices.php"
Lib <- "library=LocationInfo"
Func <- "function=getNeighborhoodsInCity"
City <- "city=Chicago"
State <- "state=IL"
apiKey <- "apikey=ryr7ngde5p2tyzy95y87nfje"
API1 <- GET(paste(URL,"?",Lib,"&",Func,"&",City,"&",State,"&",apiKey,sep=""))
Neighborhood <- content(API1,as = "text")
idx1 = gregexpr("<neighborhood><id>",Neighborhood)
idx1 <- as.numeric(idx1[[1]])
idx2 <- gregexpr("</id><name>",Neighborhood)
idx2 <- as.numeric(idx2[[1]])
idx3 <- gregexpr("</name></neighborhood",Neighborhood)
idx3<-as.numeric(idx3[[1]])
numNeigh = length(idx1)
NeighID = rep(0,numNeigh)
NeighName = rep("",numNeigh)
for (n in 1:numNeigh)
{
NeighID[n] <- as.numeric(substr(Neighborhood,start=idx1[n]+18,stop = idx2[n]-1))
NeighName[n] <- substr(Neighborhood,start = idx2[n]+11, stop= idx3[n]-1)
}
## combine the ID and name in a table:
NeighData <- data.table(NeighID,NeighName)
NeighData
Lib <- "library=TruliaStats"
Func <- "function=getCityStats"
startDate <- "startDate=2009-02-06"
endDate <- "endDate=2009-02-07"
API2 <- GET(paste(URL,"?",Lib,"&",Func,"&",City,"&",State,"&",startDate,"&",endDate,"&",apiKey,sep=""))
str(API2)
Text <- content(API2,as="text")
Text
Lib <- "library=TruliaStats"
Func <- "function=getCityStats"
startDate <- "startDate=2009-02-06"
endDate <- "endDate=2009-02-9"
API2 <- GET(paste(URL,"?",Lib,"&",Func,"&",City,"&",State,"&",startDate,"&",endDate,"&",apiKey,sep=""))
Text <- content(API2,as="text")
Text
Lib <- "library=TruliaStats"
Func <- "function=getCityStats"
startDate <- "startDate=2016-06-06"
endDate <- "endDate=2016-06-30"
API2 <- GET(paste(URL,"?",Lib,"&",Func,"&",City,"&",State,"&",startDate,"&",endDate,"&",apiKey,sep=""))
Text <- content(API2,as="text")
Text
NeighID[1]
Lib <- "library=TruliaStats"
Func <- "function=getNeighborhoodStats"
NeighborhoodStat <- "neighborhoodId=2877"
startDate <- "startDate=2016-06-06"
endDate <- "endDate=2016-06-30"
API2 <- GET(paste(URL,"?",Lib,"&",Func,"&",NeighborhoodStat,"&",startDate,"&",endDate,"&",apiKey,sep=""))
Text <- content(API2,as="text")
Text
idx idx1 <-gregexpr("<listingStats><listingStat>",Text)
idx1 <- as.numeric(idx1[[1]])
idx1 <-gregexpr("<listingStats><listingStat>",Text)
idx1 <- as.numeric(idx1[[1]])
idx1
substr(Text,start=idx1,stop = idx1+30)
substr(Text,start=idx1,stop = idx1+100)
substr(Text,start=idx1,stop = idx1+200)
View(NeighData)
idx1<- gregexpr("<weekEndingDate>",Text)
idx1
idx2 <- gregexpr("</weekEndingDate>",Text)
idx2 <- as.numeric(idx2[[1]])
idx2
d <- substr(Text,idx1[1]+ 16, idx2[1]-1)
d
idx1
idx1 <- as.numeric(idx1[[1]])
d <- substr(Text,idx1[1]+ 16, idx2[1]-1)
d
?as.Date
as.Date(d,format="%Y-%m-%d")
d2 <-as.Date(d,format="%Y-%m-%d")
d2
class(d2)
date()
numWeeks = length(idx1)
WeekEndingDate = rep(date(),numWeeks)
for (n in 1:numWeeks)
{
WeekEndingDate[n] <- as.Date(substr(Text,idx1[n]+ 16, idx2[n]-1),format = "%Y-%m-%d") ## date
}
WeekEndingDate
WeekEndingDate = rep(",",numWeeks)
for (n in 1:numWeeks)
{
WeekEndingDate[n] <- as.Date(substr(Text,idx1[n]+ 16, idx2[n]-1),format = "%Y-%m-%d") ## date
}
WeekEndingDate = rep(",",numWeeks)
for (n in 1:numWeeks)
{
WeekEndingDate[n] <- substr(Text,idx1[n]+ 16, idx2[n]-1)## date
}
as.Date(WeekEndingDate,format="%Y-%m-%d")
WeekEndingDate <- 1:numWeeks
class(WeekEndingDate) <- "Date"
WeekEndingDate
WeekEndingDate[1]
for (n in 1:numWeeks)
{
WeekEndingDate[n] <- as.Date(substr(Text,idx1[n]+ 16, idx2[n]-1),format="%Y-%m-%d")## date
}
WeekEndingDate
class(WeekEndingDate)
WeekEndingDate[1]
WeekEndingDate[1]+!
WeekEndingDate[1]+1
WeekEndingDate[1]+1
WeekEndingDate[1]+10
Text
substr(Text,idx1[1],idx1[2])
idx1 <- c(idx1,nchar(Text))
idx1
setwd("D:/Thanh-data/work/ISU_2014/DataScience/DataScienceSpecialization/week3/ProgrammingAssignment2")
source("cacheMean.R")
source("lexical.R")
source("../lexical.R")
source("../lexical.R")
x <- numeric()
source("cacheMean.R")
vec <- makeVector(1:10)
vec[1]
cachemean(x)
cachemean(vec)
cachemean(vec)
cachemean(vec)
cachemean(vec)
cachemean(vec)
source("cacheMean.R")
vec <- makeVector(1:100)
cahemean(vec)
cachemean(vec)
cachemean(vec)
cachemean(vec)
cachemean(vec)
cachemean(vec)
source("cacheMean.R")
cachemean(vec)
cachemean(vec)
cachemean(vec)
vec <- makeVector(rnorm(100))
plot(vec)
x.vector <- makeVector(rnorm(100))
cachemean(x.vector)
cachemean(x.vector)
cachemean(x.vector)
cachemean(x.vector)
paste("halo", ".hanoi")
cat("halo", ".hanoi")
paste("halo", ".hanoi",sep="")
?deparse
deparse(vec)
A <- matrix(rnorm(100),nrow = 10,ncol=10)
A
A <- matrix(runif(100,-1,1),nrow = 10, ncol=10)
A
B <- diag(x=1,nrow=10, ncol=10)
B <- diag(x=10,nrow=10, ncol=10)
B
A <- matrix(runif(100,-1,1),nrow = 10, ncol=10) + diag(x=10,nrow=10,ncol=10)
A
source("cachematrix.R")
A.list <- makeCacheMatrix(A)
A_inv <- cacheSolve(A.list)
source("cachematrix.R")
A_inv <- cacheSolve(A.list)
source("cachematrix.R")
A_inv <- cacheSolve(A.list)
A %*% A_inv
A_inv <- cacheSolve(A.list)
A %*% A_inv
